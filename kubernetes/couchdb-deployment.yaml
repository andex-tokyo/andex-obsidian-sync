# kubernetes/couchdb-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: couchdb
  namespace: obsidian-sync
spec:
  replicas: 1
  selector:
    matchLabels:
      app: couchdb
  template:
    metadata:
      labels:
        app: couchdb
    spec:
      containers:
        - name: couchdb
          image: couchdb:3.5.0
          env:
            - name: COUCHDB_USER
              value: "admin"
            - name: COUCHDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: couchdb-secrets
                  key: admin-password
            - name: COUCHDB_SECRET
              valueFrom:
                secretKeyRef:
                  name: couchdb-secrets
                  key: cookie

          ports:
            - containerPort: 5984
              name: couchdb

          volumeMounts:
            - name: couchdb-data
              mountPath: /opt/couchdb/data
            - name: setup-script
              mountPath: /setup-script.sh
              subPath: setup-script.sh

          # PostStartフックで設定スクリプトを実行
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/bash
                  - -c
                  - |
                    # バックグラウンドで設定スクリプトを実行
                    nohup /bin/bash /setup-script.sh > /tmp/setup.log 2>&1 &

          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "1Gi"
              cpu: "500m"

          readinessProbe:
            httpGet:
              path: /_up
              port: 5984
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 10

      volumes:
        - name: couchdb-data
          persistentVolumeClaim:
            claimName: couchdb-data-pvc
        - name: setup-script
          configMap:
            name: couchdb-setup-script
            defaultMode: 0755

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: couchdb-setup-script
  namespace: obsidian-sync
data:
  setup-script.sh: |
    #!/bin/bash

    hostname="http://localhost:5984"
    username="admin"
    password="${COUCHDB_PASSWORD}"

    echo "$(date): Starting CouchDB configuration..." >> /tmp/setup.log

    # CouchDBが完全に起動するまで待機
    echo "$(date): Waiting for CouchDB to be ready..." >> /tmp/setup.log
    for i in $(seq 1 120); do
      if curl -s -f "${hostname}/_up" > /dev/null 2>&1; then
        echo "$(date): CouchDB is ready after $i attempts!" >> /tmp/setup.log
        break
      fi
      sleep 5
    done

    # 既に設定済みかチェック
    if curl -s -u "${username}:${password}" "${hostname}/_node/nonode@nohost/_config/cors/origins" 2>/dev/null | grep -q "obsidian"; then
      echo "$(date): CouchDB already configured, skipping setup" >> /tmp/setup.log
      exit 0
    fi

    echo "$(date): -- Configuring CouchDB by REST APIs... -->" >> /tmp/setup.log

    # 設定を適用（エラーがあっても続行）
    curl -X POST "${hostname}/_cluster_setup" -H "Content-Type: application/json" -d "{\"action\":\"enable_single_node\",\"username\":\"${username}\",\"password\":\"${password}\",\"bind_address\":\"0.0.0.0\",\"port\":5984,\"singlenode\":true}" --user "${username}:${password}" >> /tmp/setup.log 2>&1 || echo "cluster_setup failed" >> /tmp/setup.log

    curl -X PUT "${hostname}/_node/nonode@nohost/_config/chttpd/require_valid_user" -H "Content-Type: application/json" -d '"true"' --user "${username}:${password}" >> /tmp/setup.log 2>&1

    curl -X PUT "${hostname}/_node/nonode@nohost/_config/chttpd_auth/require_valid_user" -H "Content-Type: application/json" -d '"true"' --user "${username}:${password}" >> /tmp/setup.log 2>&1

    curl -X PUT "${hostname}/_node/nonode@nohost/_config/httpd/WWW-Authenticate" -H "Content-Type: application/json" -d '"Basic realm=\"couchdb\""' --user "${username}:${password}" >> /tmp/setup.log 2>&1

    curl -X PUT "${hostname}/_node/nonode@nohost/_config/httpd/enable_cors" -H "Content-Type: application/json" -d '"true"' --user "${username}:${password}" >> /tmp/setup.log 2>&1

    curl -X PUT "${hostname}/_node/nonode@nohost/_config/chttpd/enable_cors" -H "Content-Type: application/json" -d '"true"' --user "${username}:${password}" >> /tmp/setup.log 2>&1

    curl -X PUT "${hostname}/_node/nonode@nohost/_config/chttpd/max_http_request_size" -H "Content-Type: application/json" -d '"4294967296"' --user "${username}:${password}" >> /tmp/setup.log 2>&1

    curl -X PUT "${hostname}/_node/nonode@nohost/_config/couchdb/max_document_size" -H "Content-Type: application/json" -d '"50000000"' --user "${username}:${password}" >> /tmp/setup.log 2>&1

    curl -X PUT "${hostname}/_node/nonode@nohost/_config/cors/credentials" -H "Content-Type: application/json" -d '"true"' --user "${username}:${password}" >> /tmp/setup.log 2>&1

    curl -X PUT "${hostname}/_node/nonode@nohost/_config/cors/origins" -H "Content-Type: application/json" -d '"app://obsidian.md,capacitor://localhost,http://localhost"' --user "${username}:${password}" >> /tmp/setup.log 2>&1

    echo "$(date): <-- Configuring CouchDB by REST APIs Done!" >> /tmp/setup.log

    # 設定確認
    echo "$(date): === Configuration verification ===" >> /tmp/setup.log
    curl -u "${username}:${password}" "${hostname}/_node/nonode@nohost/_config/cors" >> /tmp/setup.log 2>&1

    echo "$(date): Configuration completed successfully!" >> /tmp/setup.log

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: couchdb-data-pvc
  namespace: obsidian-sync
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
