# kubernetes/couchdb-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: couchdb
  namespace: obsidian-sync
spec:
  replicas: 1
  selector:
    matchLabels:
      app: couchdb
  template:
    metadata:
      labels:
        app: couchdb
    spec:
      containers:
        - name: couchdb
          image: couchdb:3.5.0
          env:
            - name: COUCHDB_USER
              value: "admin"
            - name: COUCHDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: couchdb-secrets
                  key: admin-password
            - name: COUCHDB_SECRET
              valueFrom:
                secretKeyRef:
                  name: couchdb-secrets
                  key: cookie

          ports:
            - containerPort: 5984
              name: couchdb

          volumeMounts:
            - name: couchdb-data
              mountPath: /opt/couchdb/data
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "1Gi"
              cpu: "500m"

        # サイドカーコンテナとして設定スクリプトを実行
        - name: couchdb-configurator
          image: curlimages/curl:latest
          command:
            - /bin/sh
            - -c
            - |

              hostname="http://localhost:5984"
              username="admin"
              password="${COUCHDB_PASSWORD}"

              echo "Waiting for CouchDB to be ready..."
              for i in $(seq 1 60); do
                if curl -s -f "${hostname}/_up" > /dev/null 2>&1; then
                  echo "CouchDB is ready!"
                  break
                fi
                echo "Attempt $i..."
                sleep 5
              done

              echo "-- Configuring CouchDB by REST APIs... -->"

              # 設定チェック：既に設定済みかどうか確認
              if curl -s -u "${username}:${password}" "${hostname}/_node/nonode@nohost/_config/cors/origins" | grep -q "obsidian"; then
                echo "CouchDB already configured, skipping setup"
                # 設定済みの場合は無限ループで待機（サイドカーとして動作継続）
                while true; do sleep 86400; done
              fi

              echo "Starting fresh configuration..."

              until (curl -X POST "${hostname}/_cluster_setup" -H "Content-Type: application/json" -d "{\"action\":\"enable_single_node\",\"username\":\"${username}\",\"password\":\"${password}\",\"bind_address\":\"0.0.0.0\",\"port\":5984,\"singlenode\":true}" --user "${username}:${password}"); do sleep 5; done

              until (curl -X PUT "${hostname}/_node/nonode@nohost/_config/chttpd/require_valid_user" -H "Content-Type: application/json" -d '"true"' --user "${username}:${password}"); do sleep 5; done

              until (curl -X PUT "${hostname}/_node/nonode@nohost/_config/chttpd_auth/require_valid_user" -H "Content-Type: application/json" -d '"true"' --user "${username}:${password}"); do sleep 5; done

              until (curl -X PUT "${hostname}/_node/nonode@nohost/_config/httpd/WWW-Authenticate" -H "Content-Type: application/json" -d '"Basic realm=\"couchdb\""' --user "${username}:${password}"); do sleep 5; done

              until (curl -X PUT "${hostname}/_node/nonode@nohost/_config/httpd/enable_cors" -H "Content-Type: application/json" -d '"true"' --user "${username}:${password}"); do sleep 5; done

              until (curl -X PUT "${hostname}/_node/nonode@nohost/_config/chttpd/enable_cors" -H "Content-Type: application/json" -d '"true"' --user "${username}:${password}"); do sleep 5; done

              until (curl -X PUT "${hostname}/_node/nonode@nohost/_config/chttpd/max_http_request_size" -H "Content-Type: application/json" -d '"4294967296"' --user "${username}:${password}"); do sleep 5; done

              until (curl -X PUT "${hostname}/_node/nonode@nohost/_config/couchdb/max_document_size" -H "Content-Type: application/json" -d '"50000000"' --user "${username}:${password}"); do sleep 5; done

              until (curl -X PUT "${hostname}/_node/nonode@nohost/_config/cors/credentials" -H "Content-Type: application/json" -d '"true"' --user "${username}:${password}"); do sleep 5; done

              until (curl -X PUT "${hostname}/_node/nonode@nohost/_config/cors/origins" -H "Content-Type: application/json" -d '"app://obsidian.md,capacitor://localhost,http://localhost"' --user "${username}:${password}"); do sleep 5; done

              echo "<-- Configuring CouchDB by REST APIs Done!"

              # 設定確認
              echo "=== Configuration verification ==="
              curl -u "${username}:${password}" "${hostname}/_node/nonode@nohost/_config/cors"

              # 設定完了後は無限ループで待機（サイドカーとして動作継続）
              echo "Configuration completed, entering maintenance mode..."
              while true; do sleep 86400; done

          env:
            - name: COUCHDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: couchdb-secrets
                  key: admin-password

      volumes:
        - name: couchdb-data
          persistentVolumeClaim:
            claimName: couchdb-data-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: couchdb-data-pvc
  namespace: obsidian-sync
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
